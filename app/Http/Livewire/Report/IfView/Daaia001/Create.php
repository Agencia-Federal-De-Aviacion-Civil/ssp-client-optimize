<?php

namespace App\Http\Livewire\Report\IfView\Daaia001;

use App\Models\Catalogue\aModel;
use App\Models\Catalogue\Municipal;
use App\Models\Catalogue\Nacionality;
use App\Models\Catalogue\State;
use App\Models\Report\Daaia001;
use Livewire\Component;
use Livewire\WithFileUploads;

class Create extends Component
{
    public $idReporter,$id_reporter,$state_id,$municipal_id,$daaia001,$nacionalities_id,$nationalitycopilot_id;
    public $report,$exactPlace,$city,$latitude,$longitude,$date,$time,$aeronauticalAuthority,$flight_phase,$indicate,$collision,
    $altitudeEvent,$maker,$modelReport,$serialNumber,$enrollment,$amateur,$maximumWeight,$accidentWeight,$nose,$datum,
    $noseI,$datumI,$aircraftCategory,$indicateI,$airworthiness,$indicateII,$numberSeats,$flightCrew,$cabinCrew,$passengerSeats,
    $undercarriage,$MaintenanceProgram,$specify,$lastInspection,$other,$lastInspectionDate,$gliderHours,$hoursLastInsp,$hoursTimeAccident,
    $ifrTeam,$collapseSystem,$fireSystem,$type,$eltInstalled,$eltActivated,$eltManufacturer,$eltModel,$eltSerial,$eltBattery,$engineType,
    $reciprocatingSystem,$makerPropeller,$modelPropeller,$pitchPropeller,$manufacturerEngine,$modelEngine,$powerEngine,$engineSerie1,
    $manufacturingDate1,$totalTime1,$lastIspection1,$lastRrepair1,$engineSerie2,$manufacturingDate2,$totalTime2,$lastIspection2,$lastRrepair2,
    $engineSerie3,$manufacturingDate3,$totalTime3,$lastIspection3,$lastRrepair3,$engineSerie4,$manufacturingDate4,$totalTime4,$lastIspection4,
    $lastRrepair4,$nameOwner1,$directionOwner1,$nameOperator1,$directionOperator1,$flightPurpose,$operation,$loadOperation,
    $passengersHow,$concessionType,$others,$tuitionInvolved,$makerInvolved,$modelInvolved,$damageInvolved,$nameOwner2,$directionOwner2,
    $nameOperator2,$directionOperator2,$malfunction,$a_model_id,$descriptionFail,$componentHours,$componentCycles,$componentInspection,$presenceFire,
    $explosion,$describeDamage,$identificationOACI,$nameAerodrome,$distanceAerodrome,$directionAerodrome,$elevation,$proximityAirport,$approachSegment,
    $approachIFR,$approachVFR,$trackHeader,$longitude2,$broad,$materialHead,$conditionsRunway,$lastTakeoff,$timeTakeoff,$destinationAirport,$planFlight,
    $clearanceFlight,$eventOccurred,$loadAircraft,$otherAircraft,$litersFuel,$gallonsfuel,$typeFuel,$specifyFuel,$otherService,$evacuationAircraft,$evacuationDescription,
    $installationObservation,$timeObservation,$distanceAccident,$directionAccident,$sourceInformation,$obtainedInformation,$lightConditions,$skyClouds,$ceiling,
    $lowestCloud,$visibilityRestriction,$Wind,$orientation,$intensity,$typeTurbulence,$severityTurbulence,$weatherConditions,$currentTimeaccident,$temperature,$altimeter,
    $altitudeDensity,$DewPoint,$precipitationType,$nameCommander,$datebirthCommander,$domicileCommander,$classLicense,$numberLicense,$validityLicense,
    $pilotAircraft ,$pilotBumpy,$pilotMultiengine,$pilotInstruments,$instructorAircraft,$instructorRugged ,$instructorMultiengine ,$instructorInstruments,$copilotAircraft,
    $copilotRugged,$copilotMultiengine ,$copilotInstruments,$daysAircraft90,$daysRugged90,$daysMultiengine90,$daysInstruments90,$daysAircraft30,$daysRugged30,$daysMultiengine30,
    $daysInstruments30,$hoursAircraft24,$hoursRugged24,$hoursMultiengine24,$hoursInstruments24,$capabilities,$medicalCertificate,$limitationsCertificate,$exceptionCertificate,
    $observationsCertificate,$otherCertificate,$occupiedSeat,$injury,$performsFunctions,$seatBelt,$theHarness,$inspectionDate,$verificationDate,$nameCopilot,$datebirthCopilot,
    $domicileCopilot,$classLicense2,$numberLicense2,$validityLicense2,$pilotAircraft2,$pilotBumpy2,$pilotMultiengine2,$pilotInstruments2,$instructorAircraft2,$instructorRugged2,
    $instructorMultiengine2,$instructorInstruments2,$copilotAircraft2,$copilotRugged2,$copilotMultiengine2,$copilotInstruments2,$daysAircraft902,$daysRugged902,$daysMultiengine902,
    $daysInstruments902,$daysAircraft302,$daysRugged302,$daysMultiengine302,$daysInstruments302,$hoursAircraft242,$hoursRugged242,$hoursMultiengine242,$hoursInstruments242,
    $capabilities2,$medicalCertificate2,$limitationsCertificate2,$exceptionCertificate2,$observationsCertificate2,$otherCertificate2,$occupiedSeat2,$injury2,$performsFunctions2,
    $seatBelt2,$theHarness2,$inspectionDate2,$verificationDate2,$nameOthers,$nationalityother_id,$datebirthOthers,$domicileOthers,$classLicense3,$numberLicense3,$validityLicense3,
    $pilotAircraft3,$pilotBumpy3,$pilotMultiengine3,$pilotInstruments3,$instructorAircraft3,$instructorRugged3,$instructorMultiengine3,$instructorInstruments3,$copilotAircraft3,
    $copilotRugged3,$copilotMultiengine3,$copilotInstruments3,$daysAircraft903,$daysRugged903,$daysMultiengine903,$daysInstruments903,$daysAircraft303,$daysRugged303,$daysMultiengine303,
    $daysInstruments303,$hoursAircraft243,$hoursRugged243,$hoursMultiengine243,$hoursInstruments243,$capabilities3,$medicalCertificate3,$limitationsCertificate3,$exceptionCertificate3,
    $observationsCertificate3,$otherCertificate3,$occupiedSeat3,$injury3,$performsFunctions3,$seatBelt3,$theHarness3,$inspectionDate3,$verificationDate3,$historyDescription,$safetyRecommendation,
    $additionalInformation;  


    public $copyRevalidation,$filesPermissions,$filesLatestservices,$filereceiptFuel,$fileProcedures,$fileForecast,$fileLicense,$fileCertificate,$filePassengers,$fileSusceptible;
    public $states,$municipals,$models,$nacionality;
    
    use WithFileUploads;
    public function rules()
    {
        return [
            'report' => 'required',
            'exactPlace' => 'required',
            'state_id' => 'required',
            'municipal_id' => 'required',
            'city' => 'required',
            'latitude' => 'required',
            'longitude' => 'required',
            'date' => 'required',
            'time' => 'required',
            'aeronauticalAuthority' => 'required',
            'flight_phase' => 'required',
            'indicate' => 'required',
            'collision' => 'required',
            'altitudeEvent' => 'required',
            'maker' => 'required',
            'modelReport' => 'required',
            'serialNumber' => 'required',
            'enrollment' => 'required',
            'amateur' => 'required',
            'maximumWeight' => 'required',
            'accidentWeight' => 'required',
            'nose' => 'required',
            'datum' => 'required',
            'noseI' => 'required',
            'datumI' => 'required',
            'aircraftCategory' => 'required',
            'indicateI' => 'required',
            'airworthiness' => 'required',
            'indicateII' => 'required',
            'numberSeats' => 'required',
            'flightCrew' => 'required',
            'cabinCrew' => 'required',
            'passengerSeats' => 'required',
            'undercarriage' => 'required',
            'MaintenanceProgram' => 'required',
            'specify' => 'required',
            'lastInspection' => 'required',
            'other' => 'required',
            'lastInspectionDate' => 'required',
            'gliderHours' => 'required',
            'hoursLastInsp' => 'required',
            'hoursTimeAccident' => 'required',
            'ifrTeam' => 'required',            
            'collapseSystem' => 'required',
            'fireSystem' => 'required',
            'type' => 'required',
            'eltInstalled' => 'required',
            'eltActivated' => 'required',
            'eltManufacturer' => 'required',
            'eltModel' => 'required',
            'eltSerial' => 'required',
            'eltBattery' => 'required',
            'engineType' => 'required',
            'reciprocatingSystem' => 'required',
            'makerPropeller' => 'required',
            'modelPropeller' => 'required',
            'pitchPropeller' => 'required',
            'manufacturerEngine' => 'required',
            'modelEngine' => 'required',
            'powerEngine' => 'required',
            // 'copyRevalidation'=> 'required|mimetypes:application/pdf|max:500',            
            'nameOwner1' => 'required',
            'directionOwner1' => 'required',
            'nameOperator1' => 'required',
            'directionOperator1' => 'required',
            'flightPurpose' => 'required',
            'operation' => 'required',
            'loadOperation' => 'required',
            'passengersHow' => 'required',
            'concessionType' => 'required',
            'others' => 'required',
            // 'filesPermissions'=> 'required|mimetypes:application/pdf|max:500',            
            'tuitionInvolved' => 'required',
            'makerInvolved' => 'required',
            'modelInvolved' => 'required',
            'damageInvolved' => 'required',
            'nameOwner2' => 'required',
            'directionOwner2' => 'required',
            'nameOperator2' => 'required',
            'directionOperator2' => 'required',
            'malfunction' => 'required',
            'descriptionFail' => 'required',
            'componentHours' => 'required',
            'componentCycles' => 'required',
            'componentInspection' => 'required',
            // 'filesLatestservices'=> 'required|mimetypes:application/pdf|max:500',
            'a_model_id' => 'required',
            'presenceFire' => 'required',
            'explosion' => 'required',
            'describeDamage' => 'required',
            'identificationOACI' => 'required',
            'nameAerodrome' => 'required',
            'distanceAerodrome' => 'required',
            'directionAerodrome' => 'required',
            'elevation' => 'required',
            'proximityAirport'=>'required',
            'approachSegment'=>'required',
            'approachIFR'=>'required',
            'approachVFR'=>'required',
            'trackHeader'=>'required',
            'longitude2'=>'required',
            'broad'=>'required',
            'materialHead'=>'required',
            'conditionsRunway'=>'required',
            'lastTakeoff' => 'required',
            'timeTakeoff' => 'required',
            'destinationAirport' => 'required',
            'planFlight' => 'required',
            'clearanceFlight' => 'required',
            'eventOccurred' => 'required',
            'loadAircraft' => 'required',
            'otherAircraft' => 'required',
            'litersFuel' => 'required',
            'gallonsfuel' => 'required',
            'typeFuel' => 'required',
            'specifyFuel' => 'required',
            'otherService' => 'required',
            // 'filereceiptFuel'=> 'required|mimetypes:application/pdf|max:500',
            'evacuationAircraft' => 'required',
            'evacuationDescription' => 'required',
            // 'fileProcedures'=> 'required|mimetypes:application/pdf|max:500',
            'installationObservation' => 'required',
            'timeObservation' => 'required',
            'distanceAccident' => 'required',
            'directionAccident' => 'required',
            'sourceInformation' => 'required',
            'obtainedInformation' => 'required',
            'lightConditions' => 'required',
            'skyClouds' => 'required',
            'ceiling' => 'required',
            'lowestCloud' => 'required',
            'visibilityRestriction' => 'required',
            'Wind' => 'required',
            'orientation' => 'required',
            'intensity' => 'required',
            'typeTurbulence' => 'required',
            'severityTurbulence' => 'required',
            'weatherConditions' => 'required',
            'currentTimeaccident' => 'required',
            'temperature' => 'required',
            'altimeter' => 'required',
            'altitudeDensity' => 'required',
            'DewPoint' => 'required',
            'precipitationType' => 'required',
            // 'fileForecast'=> 'required|mimetypes:application/pdf|max:500',
            'nameCommander' => 'required',
            'nacionalities_id' => 'required',
            'datebirthCommander' => 'required',
            'domicileCommander' => 'required',
            'classLicense' => 'required',
            'numberLicense' => 'required',
            'validityLicense' => 'required',
            'pilotAircraft' => 'required',
            'pilotBumpy' => 'required',
            'pilotMultiengine' => 'required',
            'pilotInstruments' => 'required',
            'instructorAircraft' => 'required',
            'instructorRugged' => 'required',
            'instructorMultiengine' => 'required',
            'instructorInstruments' => 'required',
            'copilotAircraft' => 'required',
            'copilotRugged' => 'required',
            'copilotMultiengine' => 'required',
            'copilotInstruments' => 'required',
            'daysAircraft90' => 'required',
            'daysRugged90' => 'required',
            'daysMultiengine90' => 'required',
            'daysInstruments90' => 'required',
            'daysAircraft30' => 'required',
            'daysRugged30' => 'required',
            'daysMultiengine30' => 'required',
            'daysInstruments30' => 'required',
            'hoursAircraft24' => 'required',
            'hoursRugged24' => 'required',
            'hoursMultiengine24' => 'required',
            'hoursInstruments24' => 'required',
            'capabilities' => 'required',
            'medicalCertificate' => 'required',
            'limitationsCertificate' => 'required',
            'exceptionCertificate' => 'required',
            'observationsCertificate' => 'required',
            'otherCertificate' => 'required',
            'occupiedSeat' => 'required',
            'injury' => 'required',
            'performsFunctions' => 'required',
            'seatBelt' => 'required',
            'theHarness' => 'required',
            'inspectionDate' => 'required',
            'verificationDate' => 'required',
            // 'fileLicense'=> 'required|mimetypes:application/pdf|max:500',                        
            'nameCopilot' => 'required',
            'nationalitycopilot_id' => 'required',
            'datebirthCopilot' => 'required',
            'domicileCopilot' => 'required',
            'classLicense2' => 'required',
            'numberLicense2' => 'required',
            'validityLicense2' => 'required',            
            'pilotAircraft2' => 'required',
            'pilotBumpy2' => 'required',
            'pilotMultiengine2' => 'required',
            'pilotInstruments2' => 'required',
            'instructorAircraft2' => 'required',
            'instructorRugged2' => 'required',
            'instructorMultiengine2' => 'required',
            'instructorInstruments2' => 'required',
            'copilotAircraft2' => 'required',
            'copilotRugged2' => 'required',
            'copilotMultiengine2' => 'required',
            'copilotInstruments2' => 'required',
            'daysAircraft902' => 'required',
            'daysRugged902' => 'required',
            'daysMultiengine902' => 'required',
            'daysInstruments902' => 'required',
            'daysAircraft302' => 'required',
            'daysRugged302' => 'required',
            'daysMultiengine302' => 'required',
            'daysInstruments302' => 'required',
            'hoursAircraft242' => 'required',
            'hoursRugged242' => 'required',
            'hoursMultiengine242' => 'required',
            'hoursInstruments242' => 'required',
            'capabilities2' => 'required',
            'medicalCertificate2' => 'required',
            'limitationsCertificate2' => 'required',
            'exceptionCertificate2' => 'required',
            'observationsCertificate2' => 'required',
            'otherCertificate2' => 'required',
            'occupiedSeat2' => 'required',
            'injury2' => 'required',
            'performsFunctions2' => 'required',
            'seatBelt2' => 'required',
            'theHarness2' => 'required',
            'inspectionDate2' => 'required',
            'verificationDate2' => 'required',
           // 'fileBinnacle'=> 'required|mimetypes:application/pdf|max:500',
            'nameOthers' => 'required',
            'nationalityother_id' => 'required',
            'datebirthOthers' => 'required',
            'domicileOthers' => 'required',
            'classLicense3' => 'required',
            'numberLicense3' => 'required',
            'validityLicense3' => 'required',
            'pilotAircraft3' => 'required',
            'pilotBumpy3' => 'required',
            'pilotMultiengine3' => 'required',
            'pilotInstruments3' => 'required',
            'instructorAircraft3' => 'required',
            'instructorRugged3' => 'required',
            'instructorMultiengine3' => 'required',
            'instructorInstruments3' => 'required',
            'copilotAircraft3' => 'required',
            'copilotRugged3' => 'required',
            'copilotMultiengine3' => 'required',
            'copilotInstruments3' => 'required',
            'daysAircraft903' => 'required',
            'daysRugged903' => 'required',
            'daysMultiengine903' => 'required',
            'daysInstruments903' => 'required',
            'daysAircraft303' => 'required',
            'daysRugged303' => 'required',
            'daysMultiengine303' => 'required',
            'daysInstruments303' => 'required',
            'hoursAircraft243' => 'required',
            'hoursRugged243' => 'required',
            'hoursMultiengine243' => 'required',
            'hoursInstruments243' => 'required',
            'capabilities3' => 'required',
            'medicalCertificate3' => 'required',
            'limitationsCertificate3' => 'required',
            'exceptionCertificate3' => 'required',
            'observationsCertificate3' => 'required',
            'otherCertificate3' => 'required',
            'occupiedSeat3' => 'required',
            'injury3' => 'required',
            'performsFunctions3' => 'required',
            'seatBelt3' => 'required',
            'theHarness3' => 'required',
            'inspectionDate3' => 'required',
            'verificationDate3' => 'required',
           // 'fileCertificate'=> 'required|mimetypes:application/pdf|max:500',              
            'historyDescription' => 'required',
           // 'filePassengers'=> 'required|mimetypes:application/pdf|max:500',              
            'safetyRecommendation' => 'required',
           // 'fileSusceptible'=> 'required|mimetypes:application/pdf|max:500',              
            'additionalInformation' => 'required',                      
        ];
    }

    public function mount($idReporter){
    $this->idReporter = $idReporter;
    $this->states = State::all();
    $this->municipals = collect();
    $this->models = aModel::all();
    $this->nacionality = Nacionality::all();
    }
    public function render()
    {
        return view('livewire.report.if-view.daaia001.create')
            ->extends('layouts.app')
            ->section('content');
    }
    public function updatedcopyRevalidation()
    {
        $this->validate(['copyRevalidation' => 'mimetypes:application/pdf|max:5000']);
    }
    public function  updatedfilesPermissions(){
        $this->validate(['filesPermissions' => 'mimetypes:application/pdf|max:5000']);        
    }
    public function updatedfilesLatestservices(){
        $this->validate(['filesLatestservices' => 'mimetypes:application/pdf|max:5000']);                
    }
    public function updatedfilereceiptFuel(){
        $this->validate(['filereceiptFuel' => 'mimetypes:application/pdf|max:5000']);                                
    }
    public function updatedfileProcedures(){
        $this->validate(['fileProcedures' => 'mimetypes:application/pdf|max:5000']);                                        
    } 
    public function updatedfileForecast(){
        $this->validate(['fileForecast' => 'mimetypes:application/pdf|max:5000']);                                        
    }     
    public function updatedfileLicense(){
        $this->validate(['fileLicense' => 'mimetypes:application/pdf|max:5000']);                                        
    }     
    public function updatedfileBinnacle(){
        $this->validate(['fileBinnacle' => 'mimetypes:application/pdf|max:5000']);                                        
    }
    public function updatedfileCertificate(){
        $this->validate(['fileCertificate' => 'mimetypes:application/pdf|max:5000']);                                        
    }

    public function updatedfilePassengers(){
        $this->validate(['filePassengers' => 'mimetypes:application/pdf|max:5000']);                                        
    }

    public function updatedfileSusceptible(){
        $this->validate(['fileSusceptible' => 'mimetypes:application/pdf|max:5000']);                                        
    }

    
    public function updatedStateId($state_id){
        $this->municipals = Municipal::where('state_id',$state_id)->get();
    }

    public function save(){
        $this->validate();
        // dd($this->directionOwner);
        $this->daaia001 = Daaia001::updateOrCreate(
            ['id' => $this->id_reporter],
            [
                'report' => $this->report,
                'general_user_id' => $this->idReporter,
                'exactPlace' => $this->exactPlace,
                'state_id' => $this->state_id,
                'municipal_id' => $this->municipal_id,
                'city' => $this->city,
                'latitude' => $this->latitude,
                'longitude' => $this->longitude,
                'date' => $this->date,
                'time' => $this->time,
                'aeronauticalAuthority' => $this->aeronauticalAuthority,
                'flight_phase' => $this->flight_phase,
                'indicate' => $this->indicate,
                'collision' => $this->collision,
                'altitudeEvent' => $this->altitudeEvent,
                'maker' => $this->maker,
                'modelReport' => $this->modelReport,
                'serialNumber' => $this->serialNumber,
                'enrollment' => $this->enrollment,
                'amateur' => $this->amateur,
                'maximumWeight' => $this->maximumWeight,
                'accidentWeight' => $this->accidentWeight,
                'nose' => $this->nose,
                'datum' => $this->datum,
                'noseI' => $this->noseI,
                'datumI' => $this->datumI,
                'aircraftCategory' => $this->aircraftCategory,
                'indicateI' => $this->indicateI,
                'airworthiness' => $this->airworthiness,
                'indicateII' => $this->indicateII,
                'numberSeats' => $this->numberSeats,
                'flightCrew' => $this->flightCrew,
                'cabinCrew' => $this->cabinCrew,
                'passengerSeats' => $this->passengerSeats,
                'undercarriage' => $this->undercarriage,
                'MaintenanceProgram' => $this->MaintenanceProgram,
                'specify' => $this->specify,
                'lastInspection' => $this->lastInspection,
                'other' => $this->other,
                'lastInspectionDate' => $this->lastInspectionDate,
                'gliderHours' => $this->gliderHours,
                'hoursLastInsp' => $this->hoursLastInsp,
                'hoursTimeAccident' => $this->hoursTimeAccident,
                'ifrTeam' => $this->ifrTeam,
                'collapseSystem' => $this->collapseSystem,
                'fireSystem' => $this->fireSystem,
                'type' => $this->type,
                'eltInstalled' => $this->eltInstalled,
                'eltActivated' => $this->eltActivated,
                'eltManufacturer' => $this->eltManufacturer,
                'eltModel' => $this->eltModel,
                'eltSerial' => $this->eltSerial,
                'eltBattery' => $this->eltBattery,
                'engineType' => $this->engineType,
                'reciprocatingSystem' => $this->reciprocatingSystem,
                'makerPropeller' => $this->makerPropeller,
                'modelPropeller' => $this->modelPropeller,
                'pitchPropeller' => $this->pitchPropeller,
                'manufacturerEngine' => $this->manufacturerEngine,
                'modelEngine' => $this->modelEngine,
                'powerEngine' => $this->powerEngine,
                'engineSerie1' => $this->engineSerie1,
                'manufacturingDate1' => $this->manufacturingDate1,
                'totalTime1' => $this->totalTime1,
                'lastIspection1' => $this->lastIspection1,
                'lastRrepair1' => $this->lastRrepair1,
                'engineSerie2' => $this->engineSerie2,
                'manufacturingDate2' => $this->manufacturingDate2,
                'totalTime2' => $this->totalTime2,
                'lastIspection2' => $this->lastIspection2,
                'lastRrepair2' => $this->lastRrepair2,
                'engineSerie3' => $this->engineSerie3,
                'manufacturingDate3' => $this->manufacturingDate3,
                'totalTime3' => $this->totalTime3,
                'lastIspection3' => $this->lastIspection3,
                'lastRrepair3' => $this->lastRrepair3,
                'engineSerie4' => $this->engineSerie4,
                'manufacturingDate4' => $this->manufacturingDate4,
                'totalTime4' => $this->totalTime4,
                'lastIspection4' => $this->lastIspection4,
                'lastRrepair4' => $this->lastRrepair4,
                // 'copyRevalidation' => $this->copyRevalidation->store('documentos', 'public','Revalidacion'),
                'nameOwner1' => $this->nameOwner1,
                'directionOwner1' => $this->directionOwner1,
                'nameOperator1' => $this->nameOperator1,
                'directionOperator1' => $this->directionOperator1,
                'flightPurpose' => $this->flightPurpose,
                'operation' => $this->operation,
                'loadOperation' => $this->loadOperation,
                'passengersHow' => $this->passengersHow,
                'concessionType' => $this->concessionType,
                'others' => $this->others,
                // 'filesPermissions' => $this->filesPermissions->store('documentos', 'public','Permisos'),
                'tuitionInvolved' => $this->tuitionInvolved,
                'makerInvolved' => $this->makerInvolved,
                'modelInvolved' => $this->modelInvolved,
                'damageInvolved' => $this->damageInvolved,
                'nameOwner2' => $this->nameOwner2,
                'directionOwner2' => $this->directionOwner2,
                'nameOperator2' => $this->nameOperator2,
                'directionOperator2' => $this->directionOperator2,
                'malfunction' => $this->malfunction,
                'descriptionFail' => $this->descriptionFail,
                'componentHours' => $this->componentHours,
                'componentCycles' => $this->componentCycles,
                'componentInspection' => $this->lastInspection,
                // 'filesLatestservices' => $this->filesLatestservices->store('documentos', 'public','Servicios'),                
                'a_model_id' => $this->a_model_id,
                'presenceFire' => $this->presenceFire,
                'explosion' => $this->explosion,
                'describeDamage' => $this->describeDamage,
                'identificationOACI' => $this->identificationOACI,
                'nameAerodrome' => $this->nameAerodrome,
                'distanceAerodrome' => $this->distanceAerodrome,
                'directionAerodrome' => $this->directionAerodrome,
                'elevation' => $this->elevation,
                'proximityAirport' => $this->proximityAirport,
                'approachSegment' => $this->approachSegment,
                'approachIFR' => $this->approachIFR,
                'approachVFR' => $this->approachVFR,
                'trackHeader' => $this->trackHeader,
                'longitude2' => $this->longitude2,
                'broad' => $this->broad,
                'materialHead' => $this->materialHead,
                'conditionsRunway' => $this->conditionsRunway,
                'lastTakeoff' => $this->lastTakeoff,
                'timeTakeoff' => $this->timeTakeoff,
                'destinationAirport' => $this->destinationAirport,
                'planFlight' => $this->planFlight,
                'clearanceFlight' => $this->clearanceFlight,
                'eventOccurred' => $this->eventOccurred,
                'loadAircraft' => $this->loadAircraft,
                'otherAircraft' => $this->otherAircraft,
                'litersFuel' => $this->litersFuel,
                'gallonsfuel' => $this->gallonsfuel,
                'typeFuel' => $this->typeFuel,
                'specifyFuel' => $this->specifyFuel,
                'otherService' => $this->otherService,
                // 'filereceiptFuel' => $this->filereceiptFuel->store('documentos', 'public','Recibo'),                
                'evacuationAircraft' => $this->evacuationAircraft,
                'evacuationDescription' => $this->evacuationDescription,
                // 'fileProcedures' => $this->fileProcedures->store('documentos', 'public','Procedimientos '),                
                'installationObservation' => $this->installationObservation,
                'timeObservation' => $this->timeObservation,
                'distanceAccident' => $this->distanceAccident,
                'directionAccident' => $this->directionAccident,
                'sourceInformation' => $this->sourceInformation,
                'obtainedInformation' => $this->obtainedInformation,
                'lightConditions' => $this->lightConditions,
                'skyClouds' => $this->skyClouds,
                'ceiling' => $this->ceiling,
                'lowestCloud' => $this->lowestCloud,
                'visibilityRestriction' => $this->visibilityRestriction,
                'Wind' => $this->Wind,
                'orientation' => $this->orientation,
                'intensity' => $this->intensity,
                'typeTurbulence' => $this->typeTurbulence,
                'severityTurbulence' => $this->severityTurbulence,
                'weatherConditions' => $this->weatherConditions,
                'currentTimeaccident' => $this->currentTimeaccident,
                'temperature' => $this->temperature,
                'altimeter' => $this->altimeter,
                'altitudeDensity' => $this->altitudeDensity,
                'DewPoint' => $this->DewPoint,
                'precipitationType' => $this->precipitationType,
                // 'fileForecast' => $this->fileForecast->store('documentos', 'public','Pronostico'),                                
                'nameCommander' => $this->nameCommander,
                'nacionalities_id' => $this->nacionalities_id,
                'datebirthCommander' => $this->datebirthCommander,
                'domicileCommander' => $this->domicileCommander,
                'classLicense' => $this->classLicense,
                'numberLicense' => $this->numberLicense,
                'validityLicense' => $this->validityLicense,
                'pilotAircraft' => $this->pilotAircraft,
                'pilotBumpy' => $this->pilotBumpy,
                'pilotMultiengine' => $this->pilotMultiengine,
                'pilotInstruments' => $this->pilotInstruments,
                'instructorAircraft' => $this->instructorAircraft,
                'instructorRugged' => $this->instructorRugged ,
                'instructorMultiengine' => $this->instructorMultiengine ,
                'instructorInstruments' => $this->instructorInstruments,
                'copilotAircraft' => $this->copilotAircraft,
                'copilotRugged' => $this->copilotRugged,
                'copilotMultiengine' => $this->copilotMultiengine ,
                'copilotInstruments' => $this->copilotInstruments,
                'daysAircraft90' => $this->daysAircraft90,
                'daysRugged90' => $this->daysRugged90 ,
                'daysMultiengine90' => $this->daysMultiengine90,
                'daysInstruments90' => $this->daysInstruments90,
                'daysAircraft30' => $this->daysAircraft30,
                'daysRugged30' => $this->daysRugged30,
                'daysMultiengine30' => $this->daysMultiengine30 ,
                'daysInstruments30' => $this->daysInstruments30,
                'hoursAircraft24' => $this->hoursAircraft24,
                'hoursRugged24' => $this->hoursRugged24,
                'hoursMultiengine24' => $this->hoursMultiengine24,
                'hoursInstruments24' => $this->hoursInstruments24,
                'capabilities' => $this->capabilities,
                'medicalCertificate' => $this->medicalCertificate,
                'limitationsCertificate' => $this->limitationsCertificate,
                'exceptionCertificate' => $this->exceptionCertificate,
                'observationsCertificate' => $this->observationsCertificate,
                'otherCertificate' => $this->otherCertificate,
                'occupiedSeat' => $this->occupiedSeat,
                'injury' => $this->injury,
                'performsFunctions' => $this->performsFunctions,
                'seatBelt' => $this->seatBelt,
                'theHarness' => $this->theHarness,
                'inspectionDate' => $this->inspectionDate,
                'verificationDate' => $this->verificationDate,
                // 'fileLicense' => $this->fileLicense->store('documentos', 'public','Licencia'),                  
                'nameCopilot' => $this->nameCopilot,
                'nationalitycopilot_id' => $this->nationalitycopilot_id,
                'datebirthCopilot' => $this->datebirthCopilot,
                'domicileCopilot' => $this->domicileCopilot,
                'classLicense2' => $this->classLicense2,
                'numberLicense2' => $this->numberLicense2,
                'validityLicense2' => $this->validityLicense2,
                'pilotAircraft2' => $this->pilotAircraft2,
                'pilotBumpy2' => $this->pilotBumpy2,
                'pilotMultiengine2' => $this->pilotMultiengine2,
                'pilotInstruments2' => $this->pilotInstruments2,
                'instructorAircraft2' => $this->instructorAircraft2,
                'instructorRugged2' => $this->instructorRugged2,
                'instructorMultiengine2' => $this->instructorMultiengine2,
                'instructorInstruments2' => $this->instructorInstruments2,
                'copilotAircraft2' => $this->copilotAircraft2,
                'copilotRugged2' => $this->copilotRugged2,
                'copilotMultiengine2' => $this->copilotMultiengine2,
                'copilotInstruments2' => $this->copilotInstruments2,
                'daysAircraft902' => $this->daysAircraft902,
                'daysRugged902' => $this->daysRugged902,
                'daysMultiengine902' => $this->daysMultiengine902,
                'daysInstruments902' => $this->daysInstruments902,
                'daysAircraft302' => $this->daysAircraft302,
                'daysRugged302' => $this->daysRugged302,
                'daysMultiengine302' => $this->daysMultiengine302,
                'daysInstruments302' => $this->daysInstruments302,
                'hoursAircraft242' => $this->hoursAircraft242,
                'hoursRugged242' => $this->hoursRugged242,
                'hoursMultiengine242' => $this->hoursMultiengine242,
                'hoursInstruments242' => $this->hoursInstruments242,
                'capabilities2' => $this->capabilities2,
                'medicalCertificate2' => $this->medicalCertificate2,
                'limitationsCertificate2' => $this->limitationsCertificate2,
                'exceptionCertificate2' => $this->exceptionCertificate2,
                'observationsCertificate2' => $this->observationsCertificate2,
                'otherCertificate2' => $this->otherCertificate2,
                'occupiedSeat2' => $this->occupiedSeat2,
                'injury2' => $this->injury2,
                'performsFunctions2' => $this->performsFunctions2,
                'seatBelt2' => $this->seatBelt2,
                'theHarness2' => $this->theHarness2,
                'inspectionDate2' => $this->inspectionDate2,
                'verificationDate2' => $this->verificationDate2,
                // 'fileBinnacle' => $this->fileBinnacle->store('documentos', 'public','Bitacora'), 
                'nameOthers' => $this->nameOthers,
                'nationalityother_id' => $this->nationalityother_id,
                'datebirthOthers' => $this->datebirthOthers,
                'domicileOthers' => $this->domicileOthers,
                'classLicense3' => $this->classLicense3,
                'numberLicense3' => $this->numberLicense3,
                'validityLicense3' => $this->validityLicense3,
                'pilotAircraft3' => $this->pilotAircraft3,
                'pilotBumpy3' => $this->pilotBumpy3,
                'pilotMultiengine3' => $this->pilotMultiengine3,
                'pilotInstruments3' => $this->pilotInstruments3,
                'instructorAircraft3' => $this->instructorAircraft3,
                'instructorRugged3' => $this->instructorRugged3,
                'instructorMultiengine3' => $this->instructorMultiengine3,
                'instructorInstruments3' => $this->instructorInstruments3,
                'copilotAircraft3' => $this->copilotAircraft3,
                'copilotRugged3' => $this->copilotRugged3,
                'copilotMultiengine3' => $this->copilotMultiengine3,
                'copilotInstruments3' => $this->copilotInstruments3,
                'daysAircraft903' => $this->daysAircraft903,
                'daysRugged903' => $this->daysRugged903,
                'daysMultiengine903' => $this->daysMultiengine903,
                'daysInstruments903' => $this->daysInstruments903,
                'daysAircraft303' => $this->daysAircraft303,
                'daysRugged303' => $this->daysRugged303,
                'daysMultiengine303' => $this->daysMultiengine303,
                'daysInstruments303' => $this->daysInstruments303,
                'hoursAircraft243' => $this->hoursAircraft243,
                'hoursRugged243' => $this->hoursRugged243,
                'hoursMultiengine243' => $this->hoursMultiengine243,
                'hoursInstruments243' => $this->hoursInstruments243,
                'capabilities3' => $this->capabilities3,
                'medicalCertificate3' => $this->medicalCertificate3,
                'limitationsCertificate3' => $this->limitationsCertificate3,
                'exceptionCertificate3' => $this->exceptionCertificate3,
                'observationsCertificate3' => $this->observationsCertificate3,
                'otherCertificate3' => $this->otherCertificate3,
                'occupiedSeat3' => $this->occupiedSeat3,
                'injury3' => $this->injury3,
                'performsFunctions3' => $this->performsFunctions3,
                'seatBelt3' => $this->seatBelt3,
                'theHarness3' => $this->theHarness3,
                'inspectionDate3' => $this->inspectionDate3,
                'verificationDate3' => $this->verificationDate3,
                // 'fileCertificate' => $this->fileCertificate->store('documentos', 'public','Certificado'), 
                'historyDescription' => $this->historyDescription,                
                // 'filePassengers' => $this->filePassengers->store('documentos', 'public','Pasajeros'), 
                'safetyRecommendation' => $this->safetyRecommendation,
                // 'fileSusceptible' => $this->fileSusceptible->store('documentos', 'public','Susceptible'), 
                'additionalInformation' => $this->additionalInformation,                
                ]
        );
    }
    public function messages()
    {
        return [
            'report' => 'Campo obligatorio',
            'exactPlace.required' => 'Campo obligatorio',
            'state_id.required' => 'Campo obligatorio',
            'municipal_id.required' => 'Campo obligatorio',
            'city.required' => 'Campo obligatorio',
            'latitude.required' => 'Campo obligatorio',
            'longitude.required' => 'Campo obligatorio',
            'date.required' => 'Campo obligatorio',
            'time.required' => 'Campo obligatorio',
            'aeronauticalAuthority.required' => 'Campo obligatorio',
            'flight_phase.required' => 'Campo obligatorio',
            // 'indicate' => 'required',
            'collision.required' => 'Campo obligatorio',
            'altitudeEvent.required' => 'Campo obligatorio',
            'maker.required' => 'Campo obligatorio',
            'modelReport.required' => 'Campo obligatorio',
            'serialNumber.required' => 'Campo obligatorio',
            'enrollment.required' => 'Campo obligatorio',
            'amateur.required' => 'Campo obligatorio',
            'maximumWeight.required' => 'Campo obligatorio',
            'accidentWeight.required' => 'Campo obligatorio',
            'nose.required' => 'Campo obligatorio',
            'datum.required' => 'Campo obligatorio',
            'noseI.required' => 'Campo obligatorio',
            'datumI.required' => 'Campo obligatorio',
            'aircraftCategory.required' => 'Campo obligatorio',
            // 'indicateI' => 'required',
            'airworthiness.required' => 'Campo obligatorio',
            // 'indicateII' => 'required',
            'numberSeats.required' => 'Campo obligatorio',
            'flightCrew.required' => 'Campo obligatorio',
            'cabinCrew.required' => 'Campo obligatorio',
            'passengerSeats.required' => 'Campo obligatorio',
            'undercarriage.required' => 'Campo obligatorio',
            'MaintenanceProgram.required' => 'Campo obligatorio',
            // 'specify' => 'required',
            'lastInspection.required' => 'Campo obligatorio',
            // 'other' => 'required',
            'lastInspectionDate.required' => 'Campo obligatorio',
            'gliderHours.required' => 'Campo obligatorio',
            'hoursLastInsp.required' => 'Campo obligatorio',
            'hoursTimeAccident.required' => 'Campo obligatorio',
            'ifrTeam.required' => 'Campo obligatorio',            
            'collapseSystem.required' => 'Campo obligatorio',
            'fireSystem.required' => 'Campo obligatorio',
            'type.required' => 'Campo obligatorio',
            'eltInstalled.required' => 'Campo obligatorio',
            'eltActivated.required' => 'Campo obligatorio',
            'eltManufacturer.required' => 'Campo obligatorio',
            'eltModel.required' => 'Campo obligatorio',
            'eltSerial.required' => 'Campo obligatorio',
            'eltBattery.required' => 'Campo obligatorio',
            'engineType.required' => 'Campo obligatorio',
            'reciprocatingSystem.required' => 'Campo obligatorio',
            'makerPropeller.required' => 'Campo obligatorio',
            'modelPropeller.required' => 'Campo obligatorio',
            'pitchPropeller.required' => 'Campo obligatorio',
            'manufacturerEngine.required' => 'Campo obligatorio',
            'modelEngine.required' => 'Campo obligatorio',
            'powerEngine.required' => 'Campo obligatorio',
            'nameOwner1.required' => 'Campo obligatorio',
            'directionOwner1.required' => 'Campo obligatorio',
            'nameOperator1.required' => 'Campo obligatorio',
            'directionOperator1.required' => 'Campo obligatorio',
            'flightPurpose.required' => 'Campo obligatorio',
            'operation.required' => 'Campo obligatorio',
            'loadOperation.required' => 'Campo obligatorio',
            // 'passengersHow' => 'required',
            'concessionType.required' => 'Campo obligatorio',
            // 'others' => 'required',
            'tuitionInvolved.required' => 'Campo obligatorio',
            'makerInvolved.required' => 'Campo obligatorio',
            'modelInvolved.required' => 'Campo obligatorio',
            'damageInvolved.required' => 'Campo obligatorio',
            'nameOwner2.required' => 'Campo obligatorio',
            'directionOwner2.required' => 'Campo obligatorio',
            'nameOperator2.required' => 'Campo obligatorio',
            'directionOperator2.required' => 'Campo obligatorio',
            'malfunction.required' => 'Campo obligatorio',
            'descriptionFail.required' => 'Campo obligatorio',
            'componentHours.required' => 'Campo obligatorio',
            'componentCycles.required' => 'Campo obligatorio',
            'componentInspection.required' => 'Campo obligatorio',
            'a_model_id.required' => 'Campo obligatorio',
            'presenceFire.required' => 'Campo obligatorio',
            'explosion.required' => 'Campo obligatorio',
            'describeDamage.required' => 'Campo obligatorio',
            'identificationOACI.required' => 'Campo obligatorio',
            'nameAerodrome.required' => 'Campo obligatorio',
            'distanceAerodrome.required' => 'Campo obligatorio',
            'directionAerodrome.required' => 'Campo obligatorio',
            'elevation.required' => 'Campo obligatorio',
            'proximityAirpor.equired' => 'Campo obligatorio',
            'approachSegmen.equired' => 'Campo obligatorio',
            'approachIF.equired' => 'Campo obligatorio',
            'approachVF.equired' => 'Campo obligatorio',
            'trackHeade.equired' => 'Campo obligatorio',
            'longitude.equired' => 'Campo obligatorio',
            'broa.equired' => 'Campo obligatorio',
            'materialHea.equired' => 'Campo obligatorio',
            'conditionsRunwa.equired' => 'Campo obligatorio',
            'lastTakeoff.required' => 'Campo obligatorio',
            'timeTakeoff.required' => 'Campo obligatorio',
            'destinationAirport.required' => 'Campo obligatorio',
            'planFlight.required' => 'Campo obligatorio',
            'clearanceFlight.required' => 'Campo obligatorio',
            'eventOccurred.required' => 'Campo obligatorio',
            'loadAircraft.required' => 'Campo obligatorio',
            // 'otherAircraft' => 'required',
            'litersFuel.required' => 'Campo obligatorio',
            'gallonsfuel.required' => 'Campo obligatorio',
            'typeFuel.required' => 'Campo obligatorio',
            // 'specifyFuel' => 'required',
            'otherService.required' => 'Campo obligatorio',
            'evacuationAircraft.required' => 'Campo obligatorio',
            'evacuationDescription.required' => 'Campo obligatorio',
            'installationObservation.required' => 'Campo obligatorio',
            'timeObservation.required' => 'Campo obligatorio',
            'distanceAccident.required' => 'Campo obligatorio',
            'directionAccident.required' => 'Campo obligatorio',
            'sourceInformation.required' => 'Campo obligatorio',
            'obtainedInformation.required' => 'Campo obligatorio',
            'lightConditions.required' => 'Campo obligatorio',
            'skyClouds.required' => 'Campo obligatorio',
            'ceiling.required' => 'Campo obligatorio',
            // 'lowestCloud' => 'required',
            'visibilityRestriction.required' => 'Campo obligatorio',
            'Wind.required' => 'Campo obligatorio',
            'orientation.required' => 'Campo obligatorio',
            'intensity.required' => 'Campo obligatorio',
            'typeTurbulence.required' => 'Campo obligatorio',
            'severityTurbulence.required' => 'Campo obligatorio',
            'weatherConditions.required' => 'Campo obligatorio',
            'currentTimeaccident.required' => 'Campo obligatorio',
            'temperature.required' => 'Campo obligatorio',
            'altimeter.required' => 'Campo obligatorio',
            'altitudeDensity.required' => 'Campo obligatorio',
            'DewPoint.required' => 'Campo obligatorio',
            'precipitationType.required' => 'Campo obligatorio',
            'nameCommander.required' => 'Campo obligatorio',
            'nacionalities_id.required' => 'Campo obligatorio',
            'datebirthCommander.required' => 'Campo obligatorio',
            'domicileCommander.required' => 'Campo obligatorio',
            'classLicense.required' => 'Campo obligatorio',
            'numberLicense.required' => 'Campo obligatorio',
            'validityLicense.required' => 'Campo obligatorio',
            'pilotAircraft.required' => 'Campo obligatorio',
            'pilotBumpy.required' => 'Campo obligatorio',
            'pilotMultiengine.required' => 'Campo obligatorio',
            'pilotInstruments.required' => 'Campo obligatorio',
            'instructorAircraft.required' => 'Campo obligatorio',
            'instructorRugged.required' => 'Campo obligatorio',
            'instructorMultiengine.required' => 'Campo obligatorio',
            'instructorInstruments.required' => 'Campo obligatorio',
            'copilotAircraft.required' => 'Campo obligatorio',
            'copilotRugged.required' => 'Campo obligatorio',
            'copilotMultiengine.required' => 'Campo obligatorio',
            'copilotInstruments.required' => 'Campo obligatorio',
            'daysAircraft90.required' => 'Campo obligatorio',
            'daysRugged90.required' => 'Campo obligatorio',
            'daysMultiengine90.required' => 'Campo obligatorio',
            'daysInstruments90.required' => 'Campo obligatorio',
            'daysAircraft30.required' => 'Campo obligatorio',
            'daysRugged30.required' => 'Campo obligatorio',
            'daysMultiengine30.required' => 'Campo obligatorio',
            'daysInstruments30.required' => 'Campo obligatorio',
            'hoursAircraft24.required' => 'Campo obligatorio',
            'hoursRugged24.required' => 'Campo obligatorio',
            'hoursMultiengine24.required' => 'Campo obligatorio',
            'hoursInstruments24.required' => 'Campo obligatorio',
            'capabilities.required' => 'Campo obligatorio',
            'medicalCertificate.required' => 'Campo obligatorio',
            'limitationsCertificate.required' => 'Campo obligatorio',
            'exceptionCertificate.required' => 'Campo obligatorio',
            'observationsCertificate.required' => 'Campo obligatorio',
            // 'otherCertificate' => 'required',
            'occupiedSeat.required' => 'Campo obligatorio',
            'injury.required' => 'Campo obligatorio',
            'performsFunctions.required' => 'Campo obligatorio',
            'seatBelt.required' => 'Campo obligatorio',
            'theHarness.required' => 'Campo obligatorio',
            'inspectionDate.required' => 'Campo obligatorio',
            'verificationDate.required' => 'Campo obligatorio',
            'nameCopilot.required' => 'Campo obligatorio',
            'nationalitycopilot_id.required' => 'Campo obligatorio',
            'datebirthCopilot.required' => 'Campo obligatorio',
            'domicileCopilot.required' => 'Campo obligatorio',
            'classLicense2.required' => 'Campo obligatorio',
            'numberLicense2.required' => 'Campo obligatorio',
            'validityLicense2.required' => 'Campo obligatorio',            
            'pilotAircraft2.required' => 'Campo obligatorio',
            'pilotBumpy2.required' => 'Campo obligatorio',
            'pilotMultiengine2.required' => 'Campo obligatorio',
            'pilotInstruments2.required' => 'Campo obligatorio',
            'instructorAircraft2.required' => 'Campo obligatorio',
            'instructorRugged2.required' => 'Campo obligatorio',
            'instructorMultiengine2.required' => 'Campo obligatorio',
            'instructorInstruments2.required' => 'Campo obligatorio',
            'copilotAircraft2.required' => 'Campo obligatorio',
            'copilotRugged2.required' => 'Campo obligatorio',
            'copilotMultiengine2.required' => 'Campo obligatorio',
            'copilotInstruments2.required' => 'Campo obligatorio',
            'daysAircraft902.required' => 'Campo obligatorio',
            'daysRugged902.required' => 'Campo obligatorio',
            'daysMultiengine902.required' => 'Campo obligatorio',
            'daysInstruments902.required' => 'Campo obligatorio',
            'daysAircraft302.required' => 'Campo obligatorio',
            'daysRugged302.required' => 'Campo obligatorio',
            'daysMultiengine302.required' => 'Campo obligatorio',
            'daysInstruments302.required' => 'Campo obligatorio',
            'hoursAircraft242.required' => 'Campo obligatorio',
            'hoursRugged242.required' => 'Campo obligatorio',
            'hoursMultiengine242.required' => 'Campo obligatorio',
            'hoursInstruments242.required' => 'Campo obligatorio',
            'capabilities2.required' => 'Campo obligatorio',
            'medicalCertificate2.required' => 'Campo obligatorio',
            'limitationsCertificate2.required' => 'Campo obligatorio',
            'exceptionCertificate2.required' => 'Campo obligatorio',
            'observationsCertificate2.required' => 'Campo obligatorio',
            // 'otherCertificate2' => 'required',
            'occupiedSeat2.required' => 'Campo obligatorio',
            'injury2.required' => 'Campo obligatorio',
            'performsFunctions2.required' => 'Campo obligatorio',
            'seatBelt2.required' => 'Campo obligatorio',
            'theHarness2.required' => 'Campo obligatorio',
            'inspectionDate2.required' => 'Campo obligatorio',
            'verificationDate2.required' => 'Campo obligatorio',
            'nameOthers.required' => 'Campo obligatorio',
            'nationalityother_id.required' => 'Campo obligatorio',
            'datebirthOthers.required' => 'Campo obligatorio',
            'domicileOthers.required' => 'Campo obligatorio',
            'classLicense3.required' => 'Campo obligatorio',
            'numberLicense3.required' => 'Campo obligatorio',
            'validityLicense3.required' => 'Campo obligatorio',
            'pilotAircraft3.required' => 'Campo obligatorio',
            'pilotBumpy3.required' => 'Campo obligatorio',
            'pilotMultiengine3.required' => 'Campo obligatorio',
            'pilotInstruments3.required' => 'Campo obligatorio',
            'instructorAircraft3.required' => 'Campo obligatorio',
            'instructorRugged3.required' => 'Campo obligatorio',
            'instructorMultiengine3.required' => 'Campo obligatorio',
            'instructorInstruments3.required' => 'Campo obligatorio',
            'copilotAircraft3.required' => 'Campo obligatorio',
            'copilotRugged3.required' => 'Campo obligatorio',
            'copilotMultiengine3.required' => 'Campo obligatorio',
            'copilotInstruments3.required' => 'Campo obligatorio',
            'daysAircraft903.required' => 'Campo obligatorio',
            'daysRugged903.required' => 'Campo obligatorio',
            'daysMultiengine903.required' => 'Campo obligatorio',
            'daysInstruments903.required' => 'Campo obligatorio',
            'daysAircraft303.required' => 'Campo obligatorio',
            'daysRugged303.required' => 'Campo obligatorio',
            'daysMultiengine303.required' => 'Campo obligatorio',
            'daysInstruments303.required' => 'Campo obligatorio',
            'hoursAircraft243.required' => 'Campo obligatorio',
            'hoursRugged243.required' => 'Campo obligatorio',
            'hoursMultiengine243.required' => 'Campo obligatorio',
            'hoursInstruments243.required' => 'Campo obligatorio',
            'capabilities3.required' => 'Campo obligatorio',
            'medicalCertificate3.required' => 'Campo obligatorio',
            'limitationsCertificate3.required' => 'Campo obligatorio',
            'exceptionCertificate3.required' => 'Campo obligatorio',
            'observationsCertificate3.required' => 'Campo obligatorio',
            // 'otherCertificate3' => 'required',
            'occupiedSeat3.required' => 'Campo obligatorio',
            'injury3.required' => 'Campo obligatorio',
            'performsFunctions3.required' => 'Campo obligatorio',
            'seatBelt3.required' => 'Campo obligatorio',
            'theHarness3.required' => 'Campo obligatorio',
            'inspectionDate3.required' => 'Campo obligatorio',
            'verificationDate3.required' => 'Campo obligatorio',
            'historyDescription.required' => 'Campo obligatorio',
            'safetyRecommendation.required' => 'Campo obligatorio',
            'additionalInformation.required' => 'Campo obligatorio',                      
        ];
    }

}
